variables:
- name: BuildParameters.solution
  value: '**\*.sln'
- name: BuildParameters.ArtifactName
  value: drop
- name: BuildPlatform
  value: "any cpu"
- name: BuildConfiguration
  value: "release"
- name: websiteName
  value: "groceryApi"
- name: appPoolName
  value: "Default"
- name: projectName
  value: "GroceryApi"
trigger:
  branches:
    include:
    - main
resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/main
pool:
  name: Default
stages:
  - stage: 'Build'
    displayName: 'Build'
    jobs:
    - job: Job_1
      steps:
      - checkout: self
        clean: true
        fetchTags: false
      - task: NuGetToolInstaller@0
        displayName: Use NuGet 6.4
        inputs:
          versionSpec: 6.4
      - task: NuGetCommand@2
        displayName: NuGet restore
        inputs:
          solution: $(BuildParameters.solution)
      - task: SonarQubePrepare@4
        displayName: Prepare analysis on SonarQube
        inputs:
          SonarQube: d974f2dc-40eb-488e-996e-dabe4f883bee
          projectKey: GroupProject_GroceryProductAPI_e3c1121f-8214-4778-bf8b-bee5b2fd1862
          projectName: main

      - task: VSBuild@1
        displayName: Build solution
        inputs:
          solution: $(BuildParameters.solution)
          msbuildArgs: /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)\\"
          platform: $(BuildPlatform)
          configuration: $(BuildConfiguration)
      - task: SonarQubeAnalyze@4
        displayName: Run Code Analysis
      - task: SonarQubePublish@4
        displayName: Publish Quality Gate Result
      - task: VSTest@2
        displayName: Test Assemblies
        inputs:
          testAssemblyVer2: >-
            **\$(BuildConfiguration)\*test*.dll

            !**\obj\**
          platform: $(BuildPlatform)
          configuration: $(BuildConfiguration)
      
      - task: PublishSymbols@2
        displayName: Publish symbols path
        continueOnError: True
        inputs:
          SearchPattern: '**\bin\**\*.pdb'
          PublishSymbols: false
          SymbolServerType: TeamServices
      - task: PublishBuildArtifacts@1
        displayName: Publish Artifact
        condition: succeededOrFailed()
        inputs:
          PathtoPublish: $(build.artifactstagingdirectory)
          ArtifactName: $(BuildParameters.ArtifactName)
          TargetPath: '\\my\share\$(Build.DefinitionName)\$(Build.BuildNumber)'
  - stage: 'Dev'
    displayName: 'Dev'
    dependsOn: 'Build'
    jobs:
      - deployment: Dev
        displayName: Dev
        environment: 
          name: 'Dev'    
          resourceType: VirtualMachine
        variables:
        - name: websitePhysicalPath
          value: '%SystemDrive%\inetpub\wwwroot\$(websiteName)'

        strategy:
          runOnce:
            deploy:
              steps: 
              - task: IISWebAppManagementOnMachineGroup@0
                inputs:            
                  IISDeploymentType: 'IISWebsite'
                  ActionIISWebsite: 'CreateOrUpdateWebsite'
                  WebsiteName: '$(websiteName)'
                  WebsitePhysicalPath: '$(websitePhysicalPath)'
                  WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
                  CreateOrUpdateAppPoolForWebsite: true
                  AppPoolNameForWebsite: '$(appPoolName)'
                  DotNetVersionForWebsite: 'No Managed Code'
                  PipeLineModeForWebsite: 'Integrated'
                  AppPoolIdentityForWebsite: 'ApplicationPoolIdentity'
                  AddBinding: true
                  Bindings: |
                      {
                          bindings:[
                              {
                                  "protocol":"http",
                                  "ipAddress":"",
                                  "hostname":"",
                                  "port":"7000",
                                  "sslThumbprint":"",
                                  "sniFlag":false
                              }
                          ]
                      }
              - task: IISWebAppDeploymentOnMachineGroup@0
                inputs:
                  WebSiteName: '$(websiteName)'
                  Package: 'C:\azagent\A2\_work\r1\a\_NhatPhucNguyen.GroceryProductAPI\drop\GroceryProductAPI.zip'
  - stage: 'Production'
    displayName: 'Production'
    dependsOn: 'Build'
    jobs:
      - deployment: Production
        displayName: Production
        environment: 
          name: 'Production'    
          resourceType: VirtualMachine
        variables:
        - name: websitePhysicalPath
          value: '%SystemDrive%\inetpub\wwwroot\$(websiteName)'

        strategy:
          runOnce:
            deploy:
              steps: 
              - task: IISWebAppManagementOnMachineGroup@0
                inputs:            
                  IISDeploymentType: 'IISWebsite'
                  ActionIISWebsite: 'CreateOrUpdateWebsite'
                  WebsiteName: '$(websiteName)'
                  WebsitePhysicalPath: '$(websitePhysicalPath)'
                  WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
                  CreateOrUpdateAppPoolForWebsite: true
                  AppPoolNameForWebsite: '$(appPoolName)'
                  DotNetVersionForWebsite: 'No Managed Code'
                  PipeLineModeForWebsite: 'Integrated'
                  AppPoolIdentityForWebsite: 'ApplicationPoolIdentity'
                  AddBinding: true
                  Bindings: |
                      {
                          bindings:[
                              {
                                  "protocol":"http",
                                  "ipAddress":"",
                                  "hostname":"",
                                  "port":"7001",
                                  "sslThumbprint":"",
                                  "sniFlag":false
                              }
                          ]
                      }
              - task: IISWebAppDeploymentOnMachineGroup@0
                inputs:
                  WebSiteName: '$(websiteName)'
                  Package: 'C:\azagent\A2\_work\r1\a\_NhatPhucNguyen.GroceryProductAPI\drop\GroceryProductAPI.zip'
  - stage: 'QAT'
    displayName: 'QAT'
    dependsOn: 'Build'
    jobs:
      - deployment: QAT
        displayName: QAT
        environment: 
          name: 'QAT'    
          resourceType: VirtualMachine
        variables:
        - name: websitePhysicalPath
          value: '%SystemDrive%\inetpub\wwwroot\$(websiteName)'

        strategy:
          runOnce:
            deploy:
              steps: 
              - task: IISWebAppManagementOnMachineGroup@0
                inputs:            
                  IISDeploymentType: 'IISWebsite'
                  ActionIISWebsite: 'CreateOrUpdateWebsite'
                  WebsiteName: '$(websiteName)'
                  WebsitePhysicalPath: '$(websitePhysicalPath)'
                  WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
                  CreateOrUpdateAppPoolForWebsite: true
                  AppPoolNameForWebsite: '$(appPoolName)'
                  DotNetVersionForWebsite: 'No Managed Code'
                  PipeLineModeForWebsite: 'Integrated'
                  AppPoolIdentityForWebsite: 'ApplicationPoolIdentity'
                  AddBinding: true
                  Bindings: |
                      {
                          bindings:[
                              {
                                  "protocol":"http",
                                  "ipAddress":"",
                                  "hostname":"",
                                  "port":"7002",
                                  "sslThumbprint":"",
                                  "sniFlag":false
                              }
                          ]
                      }
              - task: IISWebAppDeploymentOnMachineGroup@0
                inputs:
                  WebSiteName: '$(websiteName)'
                  Package: 'C:\azagent\A2\_work\r1\a\_NhatPhucNguyen.GroceryProductAPI\drop\GroceryProductAPI.zip'
  - stage: 'Stage'
    displayName: 'Stage'
    dependsOn: 'Build'
    jobs:
      - deployment: Stage
        displayName: Stage
        environment: 
          name: 'Stage'    
          resourceType: VirtualMachine
        variables:
        - name: websitePhysicalPath
          value: '%SystemDrive%\inetpub\wwwroot\$(websiteName)'

        strategy:
          runOnce:
            deploy:
              steps: 
              - task: IISWebAppManagementOnMachineGroup@0
                inputs:            
                  IISDeploymentType: 'IISWebsite'
                  ActionIISWebsite: 'CreateOrUpdateWebsite'
                  WebsiteName: '$(websiteName)'
                  WebsitePhysicalPath: '$(websitePhysicalPath)'
                  WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
                  CreateOrUpdateAppPoolForWebsite: true
                  AppPoolNameForWebsite: '$(appPoolName)'
                  DotNetVersionForWebsite: 'No Managed Code'
                  PipeLineModeForWebsite: 'Integrated'
                  AppPoolIdentityForWebsite: 'ApplicationPoolIdentity'
                  AddBinding: true
                  Bindings: |
                      {
                          bindings:[
                              {
                                  "protocol":"http",
                                  "ipAddress":"",
                                  "hostname":"",
                                  "port":"7003",
                                  "sslThumbprint":"",
                                  "sniFlag":false
                              }
                          ]
                      }
              - task: IISWebAppDeploymentOnMachineGroup@0
                inputs:
                  WebSiteName: '$(websiteName)'
                  Package: 'C:\azagent\A2\_work\r1\a\_NhatPhucNguyen.GroceryProductAPI\drop\GroceryProductAPI.zip'

...

